#!/bin/bash

(
    set -e

    export KERNEL_DIR=$(readlink -e .)

    DIR="${BASH_SOURCE%/*}"
    if [[ ! -d "$DIR" ]]; then DIR="$PWD"; fi

    . "$DIR/functions"

    # -f makes it so it won't error out if the file doesn't exist
    rm -f config.aphro.tmp
    envsubst < "config.aphro" > "config.aphro.tmp"

    # see above about -f
    rm -f targets.tmp
    envsubst < "targets" > "targets.tmp"

    export $(grep -Ev '^#' targets.tmp | xargs)

    export $(grep -Ev '^#' config.aphro.tmp | xargs)

    get_version

    if [[ "$CFG_VERSION" != "$VERSION" ]]; then
        echo -n "[WARN] Configuration version \"$CFG_VERSION\" is different then actual version \"$VERSION\""
        if [[ "$CONT_WITH_DIFFERENT_VERSION" != "true" ]]; then
            echo "; not continuing"
            exit 1
        fi
        echo
    fi

    function compile_one {
        target=$1
        real_target=${!target}
        real_target=$(basename $real_target)
        echo "Compiling target $target(with rust target of $real_target)"
        cargo build --target "$real_target" --release -Zbuild-std=core,alloc --bin entrypoint_$target
        cp "target/$(echo $real_target | sed 's/\.json//')/release/entrypoint_$target" kernel-$target

        if [[ "$CONFIG_BUILD_GRUB" = "true" ]]; then
            if [[ "$target" = "x86" || "$target" = "mips64" || "$target" = "mipsel" || "$target" = "mipsle" ]]; then
                rm -rf grub aphrodite-grub-$target.iso
                cp -r ./grub_template ./grub

                cp kernel-$target ./grub/boot/aphrodite.kernel

                sed -i "s@%{VERSION}@$VERSION@g" ./grub/boot/grub/grub.cfg

                grub-mkrescue -o aphrodite-grub-$target.iso grub
                cp aphrodite-grub-$target.iso aphrodite-$target.iso
            fi
        fi
    }

    if [[ $# -ge 1 ]]; then
        echo "[INFO] Compiling only target $1"
        compile_one $1
        exit 0
    fi

    for target in $TARGETS; do
        compile_one $target
    done

    reset_version_vars
)